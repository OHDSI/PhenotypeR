% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/phenotypeDiagnostics.R
\name{phenotypeDiagnostics}
\alias{phenotypeDiagnostics}
\title{Phenotype a cohort}
\usage{
phenotypeDiagnostics(
  cohort,
  databaseDiagnostics = TRUE,
  codelistDiagnostics = TRUE,
  cohortDiagnostics = TRUE,
  populationDiagnostics = TRUE,
  populationSample = 1e+06,
  matchedDiagnostics = TRUE,
  matchedSample = 1000
)
}
\arguments{
\item{cohort}{Cohort table in a cdm reference}

\item{databaseDiagnostics}{If TRUE, database diagnostics will be run.}

\item{codelistDiagnostics}{If TRUE, codelist diagnostics will be run.}

\item{cohortDiagnostics}{If TRUE, cohort diagnostics will be run.}

\item{populationDiagnostics}{If TRUE, population diagnostics will be run.}

\item{populationSample}{Number of people from the cdm to sample. If NULL no
sampling will be performed}

\item{matchedDiagnostics}{If TRUE, cohort to population
diagnostics will be run.}

\item{matchedSample}{The number of people to take a random sample for
matching. If NULL, no sampling will be performed.}
}
\value{
A summarised result
}
\description{
Phenotype a cohort
}
\examples{
\donttest{
  cdm_local <- omock::mockCdmReference() |>
    omock::mockPerson(nPerson = 100) |>
    omock::mockObservationPeriod() |>
    omock::mockConditionOccurrence() |>
    omock::mockDrugExposure() |>
    omock::mockObservation() |>
    omock::mockMeasurement() |>
    omock::mockCohort(name = "my_cohort",
                      numberCohorts = 2)
  cdm_local$visit_occurrence <- dplyr::tibble(
    person_id = 1L,
    visit_occurrence_id = 1L,
    visit_concept_id = 1L,
    visit_start_date = as.Date("2000-01-01"),
    visit_end_date = as.Date("2000-01-01"),
    visit_type_concept_id = 1L)
  cdm_local$procedure_occurrence <- dplyr::tibble(
    person_id = 1L,
    procedure_occurrence_id = 1L,
    procedure_concept_id = 1L,
    procedure_date = as.Date("2000-01-01"),
    procedure_type_concept_id = 1L)

  db <- DBI::dbConnect(duckdb::duckdb())
  cdm <- CDMConnector::copyCdmTo(con = db,
                                 cdm = cdm_local,
                                 schema ="main",
                                 overwrite = TRUE)
  phenotypeDiagnostics(cdm$my_cohort)
  CDMConnector::cdm_disconnect(cdm)
}
}
